{
  "stats": {
    "suites": 11,
    "tests": 12,
    "passes": 9,
    "pending": 0,
    "failures": 3,
    "start": "2017-08-18T05:16:36.534Z",
    "end": "2017-08-18T05:16:41.344Z",
    "duration": 4810,
    "testsRegistered": 13,
    "passPercent": 69.2,
    "pendingPercent": 0,
    "other": 2,
    "hasOther": true,
    "skipped": 1,
    "hasSkipped": true,
    "passPercentClass": "warning",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "加法函数的测试",
        "suites": [],
        "tests": [
          {
            "title": "x1 加 y2 应该等于 r1",
            "fullTitle": "加法函数的测试 x1 加 y2 应该等于 r1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(add(x1, y1)).to.be.equal(r1);",
            "err": {},
            "isRoot": false,
            "uuid": "6caa3e74-4f50-4405-a653-3c3f180ada10",
            "parentUUID": "ff743054-3e1d-4b78-a7f7-a4a5d83306a1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "x2 加 y2 应该等于 r2",
            "fullTitle": "加法函数的测试 x2 加 y2 应该等于 r2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(add(x2, y2)).to.be.equal(r2);",
            "err": {},
            "isRoot": false,
            "uuid": "bdd95caa-980e-4b90-9c6c-9790bc74a05d",
            "parentUUID": "ff743054-3e1d-4b78-a7f7-a4a5d83306a1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "x3 加 y3 不等于 wrong3",
            "fullTitle": "加法函数的测试 x3 加 y3 不等于 wrong3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(add(x3, y3)).to.be.not.equal(wrong3);",
            "err": {},
            "isRoot": false,
            "uuid": "6c1fc1aa-d5a0-4f4e-9447-9e331eb36fd5",
            "parentUUID": "ff743054-3e1d-4b78-a7f7-a4a5d83306a1",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\add.test.js",
        "uuid": "ff743054-3e1d-4b78-a7f7-a4a5d83306a1",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "e:\\Progaram File\\Microsoft VS Code\\test\\Project\\Demo\\add.test.js",
        "passes": [
          {
            "title": "x1 加 y2 应该等于 r1",
            "fullTitle": "加法函数的测试 x1 加 y2 应该等于 r1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(add(x1, y1)).to.be.equal(r1);",
            "err": {},
            "isRoot": false,
            "uuid": "6caa3e74-4f50-4405-a653-3c3f180ada10",
            "parentUUID": "ff743054-3e1d-4b78-a7f7-a4a5d83306a1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "x2 加 y2 应该等于 r2",
            "fullTitle": "加法函数的测试 x2 加 y2 应该等于 r2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(add(x2, y2)).to.be.equal(r2);",
            "err": {},
            "isRoot": false,
            "uuid": "bdd95caa-980e-4b90-9c6c-9790bc74a05d",
            "parentUUID": "ff743054-3e1d-4b78-a7f7-a4a5d83306a1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "x3 加 y3 不等于 wrong3",
            "fullTitle": "加法函数的测试 x3 加 y3 不等于 wrong3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(add(x3, y3)).to.be.not.equal(wrong3);",
            "err": {},
            "isRoot": false,
            "uuid": "6c1fc1aa-d5a0-4f4e-9447-9e331eb36fd5",
            "parentUUID": "ff743054-3e1d-4b78-a7f7-a4a5d83306a1",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "/k/v1/records.json DELETE测试",
        "suites": [],
        "tests": [
          {
            "title": "删除指定的record并验证返回值",
            "fullTitle": "/k/v1/records.json DELETE测试 删除指定的record并验证返回值",
            "timedOut": true,
            "duration": 2020,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "api.delete('')\n  .set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n  .send({\n    \"app\": 1,\n    \"ids\": [13,14]\n  })\n\n  .expect(200)\n  .end(function(err, res){\n  if (err) return done(err);\n  done();\n\n  })",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
            },
            "isRoot": false,
            "uuid": "e6dc48f7-dac2-4cf8-b350-b2a94794d32f",
            "parentUUID": "384c2786-c5c2-43f9-8890-887cbf5b559e",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\API.delete.test.js",
        "uuid": "384c2786-c5c2-43f9-8890-887cbf5b559e",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "e:\\Progaram File\\Microsoft VS Code\\test\\Project\\Demo\\API.delete.test.js",
        "passes": [],
        "failures": [
          {
            "title": "删除指定的record并验证返回值",
            "fullTitle": "/k/v1/records.json DELETE测试 删除指定的record并验证返回值",
            "timedOut": true,
            "duration": 2020,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "api.delete('')\n  .set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n  .send({\n    \"app\": 1,\n    \"ids\": [13,14]\n  })\n\n  .expect(200)\n  .end(function(err, res){\n  if (err) return done(err);\n  done();\n\n  })",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
            },
            "isRoot": false,
            "uuid": "e6dc48f7-dac2-4cf8-b350-b2a94794d32f",
            "parentUUID": "384c2786-c5c2-43f9-8890-887cbf5b559e",
            "isHook": false,
            "skipped": false
          }
        ],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 0,
        "totalFailures": 1,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": true,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 2020,
        "rootEmpty": false
      },
      {
        "title": "Record",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 response",
            "fullTitle": "Record should return a 200 response",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "speed": "fast",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "api.get('?app=1&id=1')\n  .set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n  .expect(200, done) //返回值response为200\ndone();",
            "err": {
              "message": "Error: done() called multiple times",
              "estack": "Error: done() called multiple times\n    at Suite.<anonymous> (API.get.test.js:7:3)\n    at Object.<anonymous> (API.get.test.js:4:1)\n    at require (internal/module.js:20:19)\n    at Array.forEach (native)\n    at run (bootstrap_node.js:389:7)\n    at startup (bootstrap_node.js:149:9)\n    at bootstrap_node.js:504:3"
            },
            "isRoot": false,
            "uuid": "2c0ad0cb-8693-4f1d-a7c6-71ac79e18812",
            "parentUUID": "463efed0-465d-4e50-8101-51b716f859a9",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\API.get.test.js",
        "uuid": "463efed0-465d-4e50-8101-51b716f859a9",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "e:\\Progaram File\\Microsoft VS Code\\test\\Project\\Demo\\API.get.test.js",
        "passes": [],
        "failures": [
          {
            "title": "should return a 200 response",
            "fullTitle": "Record should return a 200 response",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "speed": "fast",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "api.get('?app=1&id=1')\n  .set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n  .expect(200, done) //返回值response为200\ndone();",
            "err": {
              "message": "Error: done() called multiple times",
              "estack": "Error: done() called multiple times\n    at Suite.<anonymous> (API.get.test.js:7:3)\n    at Object.<anonymous> (API.get.test.js:4:1)\n    at require (internal/module.js:20:19)\n    at Array.forEach (native)\n    at run (bootstrap_node.js:389:7)\n    at startup (bootstrap_node.js:149:9)\n    at bootstrap_node.js:504:3"
            },
            "isRoot": false,
            "uuid": "2c0ad0cb-8693-4f1d-a7c6-71ac79e18812",
            "parentUUID": "463efed0-465d-4e50-8101-51b716f859a9",
            "isHook": false,
            "skipped": false
          }
        ],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 0,
        "totalFailures": 1,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": true,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Record",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 response",
            "fullTitle": "Record should return a 200 response",
            "timedOut": true,
            "duration": 2018,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "api.get('?app=1&id=1')\n.set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n.expect(200) //返回值response为200\n.end(function(err, res){\nif (err) return done(err);\n  expect(res.body.record).to.have.property('天気')   //断言结果有 '天气' 字段\n  expect(res.body.record.天気.value).to.be.equal('晴れ'); //断言结果 '天气' 字段的值为 '晴れ'\n  expect(res.body.record).to.have.property('レコード番号')\n  expect(res.body.record.レコード番号.value).to.be.equal('1');\n  expect(res.body.record).to.have.property('作成者')\n  expect(res.body.record.作成者.value.code).to.be.equal('cybozu');\n\n\ndone(); //告诉mocha结束测试\n  })",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
            },
            "isRoot": false,
            "uuid": "9441aefc-95f1-4d53-b30f-1a69f6747da8",
            "parentUUID": "de4832de-6aea-46b3-9481-515031676c0b",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\API.get.value.test.js",
        "uuid": "de4832de-6aea-46b3-9481-515031676c0b",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "e:\\Progaram File\\Microsoft VS Code\\test\\Project\\Demo\\API.get.value.test.js",
        "passes": [],
        "failures": [
          {
            "title": "should return a 200 response",
            "fullTitle": "Record should return a 200 response",
            "timedOut": true,
            "duration": 2018,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "api.get('?app=1&id=1')\n.set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n.expect(200) //返回值response为200\n.end(function(err, res){\nif (err) return done(err);\n  expect(res.body.record).to.have.property('天気')   //断言结果有 '天气' 字段\n  expect(res.body.record.天気.value).to.be.equal('晴れ'); //断言结果 '天气' 字段的值为 '晴れ'\n  expect(res.body.record).to.have.property('レコード番号')\n  expect(res.body.record.レコード番号.value).to.be.equal('1');\n  expect(res.body.record).to.have.property('作成者')\n  expect(res.body.record.作成者.value.code).to.be.equal('cybozu');\n\n\ndone(); //告诉mocha结束测试\n  })",
            "err": {
              "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.",
              "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
            },
            "isRoot": false,
            "uuid": "9441aefc-95f1-4d53-b30f-1a69f6747da8",
            "parentUUID": "de4832de-6aea-46b3-9481-515031676c0b",
            "isHook": false,
            "skipped": false
          }
        ],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 0,
        "totalFailures": 1,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": true,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 2018,
        "rootEmpty": false
      },
      {
        "title": "Record",
        "suites": [],
        "tests": [
          {
            "title": "should return a 200 response",
            "fullTitle": "Record should return a 200 response",
            "timedOut": false,
            "duration": 772,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "api.post('')\n.set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n.set('Content-Type', 'application/json')\n.send({\n\"app\":1,\n\"record\": {\n  \"売上\": {\"value\": \"123456\"},\n   \"天気\":{\"value\":\"雨\"},\n   \"引継ぎ事項\":{\"value\":\"AAA\"}\n  }}\n)\n.expect(200)\n.end(function(err, res){\nif (err) return done(err);\ndone();\n\n})",
            "err": {
              "message": "AssertionError: expected '雨' to equal '晴れ'",
              "estack": "AssertionError: expected '雨' to equal '晴れ'\n    at Test.<anonymous> (API.get.value.test.js:14:44)\n    at Test.assert (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:179:6)\n    at assert (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:131:12)\n    at e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:128:5\n    at Test.Request.callback (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\index.js:668:14)\n    at e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\index.js:883:18\n    at Stream.<anonymous> (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\parsers\\json.js:16:7)\n    at Unzip.<anonymous> (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\unzip.js:53:12)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)",
              "diff": "- 雨\n+ 晴れ\n"
            },
            "isRoot": false,
            "uuid": "6ae3ae4d-da40-4de5-97ea-5e6a29aeb1c6",
            "parentUUID": "df9d10be-f2dd-421a-9421-e55d4c12447e",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\API.post.test.js",
        "uuid": "df9d10be-f2dd-421a-9421-e55d4c12447e",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "e:\\Progaram File\\Microsoft VS Code\\test\\Project\\Demo\\API.post.test.js",
        "passes": [],
        "failures": [
          {
            "title": "should return a 200 response",
            "fullTitle": "Record should return a 200 response",
            "timedOut": false,
            "duration": 772,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "api.post('')\n.set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n.set('Content-Type', 'application/json')\n.send({\n\"app\":1,\n\"record\": {\n  \"売上\": {\"value\": \"123456\"},\n   \"天気\":{\"value\":\"雨\"},\n   \"引継ぎ事項\":{\"value\":\"AAA\"}\n  }}\n)\n.expect(200)\n.end(function(err, res){\nif (err) return done(err);\ndone();\n\n})",
            "err": {
              "message": "AssertionError: expected '雨' to equal '晴れ'",
              "estack": "AssertionError: expected '雨' to equal '晴れ'\n    at Test.<anonymous> (API.get.value.test.js:14:44)\n    at Test.assert (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:179:6)\n    at assert (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:131:12)\n    at e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:128:5\n    at Test.Request.callback (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\index.js:668:14)\n    at e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\index.js:883:18\n    at Stream.<anonymous> (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\parsers\\json.js:16:7)\n    at Unzip.<anonymous> (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\unzip.js:53:12)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)",
              "diff": "- 雨\n+ 晴れ\n"
            },
            "isRoot": false,
            "uuid": "6ae3ae4d-da40-4de5-97ea-5e6a29aeb1c6",
            "parentUUID": "df9d10be-f2dd-421a-9421-e55d4c12447e",
            "isHook": false,
            "skipped": false
          }
        ],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 0,
        "totalFailures": 1,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": true,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 772,
        "rootEmpty": false
      },
      {
        "title": "Record",
        "suites": [],
        "tests": [
          {
            "title": "添加一条记录并验证结果",
            "fullTitle": "Record 添加一条记录并验证结果",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "api.get('')\n  .set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n  .send({\n    'app': 1,\n    'id': location\n  })\n  .expect(200) //返回值response为200\n  .end(function (err, res) {\n    if (err) return done(err);\n    location = res.body.id;\n    expect(res.body.record).to.have.property('天気')\n    expect(res.body.record.天気.value).to.be.equal('雨');\n    expect(res.body.record).to.have.property('作成者')\n    expect(res.body.record.作成者.value.code).to.be.equal('cybozu');\n    expect(res.body.record).to.have.property('日付')\n    expect(res.body.record.日付.value).to.be.equal('2017-08-15');\n    expect(res.body.record).to.have.property('引継ぎ事項')\n    expect(res.body.record.引継ぎ事項.value).to.be.equal('AAA');\n    expect(res.body.record).to.have.property('売上')\n    expect(res.body.record.売上.value).to.be.equal('123456');\n    done(); //告诉mocha结束测试\n  })",
            "err": {},
            "isRoot": false,
            "uuid": "cadf99db-ebd2-438e-8c70-950a3f621534",
            "parentUUID": "738f996d-880b-4fb1-93f5-079221d3f620",
            "isHook": false,
            "skipped": true
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\API.post.value.test.js",
        "uuid": "738f996d-880b-4fb1-93f5-079221d3f620",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "Record \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "api.post('')\n  .set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n  .set('Content-Type', 'application/json')\n  .send({\n    \"app\": 1,\n    \"record\": {\n      \"売上\": { \"value\": \"123456\" },\n      \"天気\": { \"value\": \"雨\" },\n      \"引継ぎ事項\": { \"value\": \"AAA\" }\n    }\n  })\n  .expect(200) \n  .end(function (err, res) {\n    if (err) return done(err);\n    location = res.body.id;\n    done();\n  })",
            "err": {
              "message": "TypeError: Cannot set property 'state' of undefined",
              "estack": "TypeError: Cannot set property 'state' of undefined\n    at Test.<anonymous> (API.post.test.js:25:3)\n    at Test.assert (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:179:6)\n    at assert (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:131:12)\n    at e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:128:5\n    at Test.Request.callback (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\index.js:668:14)\n    at e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\index.js:883:18\n    at Stream.<anonymous> (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\parsers\\json.js:16:7)\n    at Unzip.<anonymous> (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\unzip.js:53:12)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)"
            },
            "isRoot": false,
            "uuid": "f1d91f8f-8c23-430d-8cd2-2137b71fc9f7",
            "parentUUID": "738f996d-880b-4fb1-93f5-079221d3f620",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "fullFile": "e:\\Progaram File\\Microsoft VS Code\\test\\Project\\Demo\\API.post.value.test.js",
        "passes": [],
        "failures": [],
        "skipped": [
          {
            "title": "添加一条记录并验证结果",
            "fullTitle": "Record 添加一条记录并验证结果",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "api.get('')\n  .set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n  .send({\n    'app': 1,\n    'id': location\n  })\n  .expect(200) //返回值response为200\n  .end(function (err, res) {\n    if (err) return done(err);\n    location = res.body.id;\n    expect(res.body.record).to.have.property('天気')\n    expect(res.body.record.天気.value).to.be.equal('雨');\n    expect(res.body.record).to.have.property('作成者')\n    expect(res.body.record.作成者.value.code).to.be.equal('cybozu');\n    expect(res.body.record).to.have.property('日付')\n    expect(res.body.record.日付.value).to.be.equal('2017-08-15');\n    expect(res.body.record).to.have.property('引継ぎ事項')\n    expect(res.body.record.引継ぎ事項.value).to.be.equal('AAA');\n    expect(res.body.record).to.have.property('売上')\n    expect(res.body.record.売上.value).to.be.equal('123456');\n    done(); //告诉mocha结束测试\n  })",
            "err": {},
            "isRoot": false,
            "uuid": "cadf99db-ebd2-438e-8c70-950a3f621534",
            "parentUUID": "738f996d-880b-4fb1-93f5-079221d3f620",
            "isHook": false,
            "skipped": true
          }
        ],
        "hasBeforeHooks": true,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 1,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": true,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "加法函数的测试",
        "suites": [],
        "tests": [
          {
            "title": "x1 加 y1 应该等于 z1",
            "fullTitle": "加法函数的测试 x1 加 y1 应该等于 z1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Caculator.add(data.x1, data.y1)).to.be.equal(data.z1);",
            "err": {},
            "isRoot": false,
            "uuid": "d9cd4404-1f8c-4ace-9fee-54e2c0ad6948",
            "parentUUID": "449540ed-f342-4721-8dff-3f2fadb44dea",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\Caculator.test.js",
        "uuid": "449540ed-f342-4721-8dff-3f2fadb44dea",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "e:\\Progaram File\\Microsoft VS Code\\test\\Project\\Demo\\Caculator.test.js",
        "passes": [
          {
            "title": "x1 加 y1 应该等于 z1",
            "fullTitle": "加法函数的测试 x1 加 y1 应该等于 z1",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Caculator.add(data.x1, data.y1)).to.be.equal(data.z1);",
            "err": {},
            "isRoot": false,
            "uuid": "d9cd4404-1f8c-4ace-9fee-54e2c0ad6948",
            "parentUUID": "449540ed-f342-4721-8dff-3f2fadb44dea",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "乘法函数的测试",
        "suites": [],
        "tests": [
          {
            "title": "x2 乘 y2 应该等于 z2",
            "fullTitle": "乘法函数的测试 x2 乘 y2 应该等于 z2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Caculator.multiply(data.x2, data.y2)).to.be.equal(data.z2);",
            "err": {},
            "isRoot": false,
            "uuid": "3b16bf1a-005d-4bec-a349-cb3eced8f3d0",
            "parentUUID": "cfcdaa62-4223-4ac9-adfa-2035fc2e0a0d",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\Caculator.test.js",
        "uuid": "cfcdaa62-4223-4ac9-adfa-2035fc2e0a0d",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "e:\\Progaram File\\Microsoft VS Code\\test\\Project\\Demo\\Caculator.test.js",
        "passes": [
          {
            "title": "x2 乘 y2 应该等于 z2",
            "fullTitle": "乘法函数的测试 x2 乘 y2 应该等于 z2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Caculator.multiply(data.x2, data.y2)).to.be.equal(data.z2);",
            "err": {},
            "isRoot": false,
            "uuid": "3b16bf1a-005d-4bec-a349-cb3eced8f3d0",
            "parentUUID": "cfcdaa62-4223-4ac9-adfa-2035fc2e0a0d",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "除法函数的测试",
        "suites": [],
        "tests": [
          {
            "title": "x3 除 y3 应该等于 z3",
            "fullTitle": "除法函数的测试 x3 除 y3 应该等于 z3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Caculator.divide(data.x3, data.y3)).to.be.equal(data.z3);",
            "err": {},
            "isRoot": false,
            "uuid": "63393917-3519-435a-adb3-06ffb2098dde",
            "parentUUID": "46f46c80-20a3-4391-899e-d215c45519c5",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\Caculator.test.js",
        "uuid": "46f46c80-20a3-4391-899e-d215c45519c5",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "e:\\Progaram File\\Microsoft VS Code\\test\\Project\\Demo\\Caculator.test.js",
        "passes": [
          {
            "title": "x3 除 y3 应该等于 z3",
            "fullTitle": "除法函数的测试 x3 除 y3 应该等于 z3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Caculator.divide(data.x3, data.y3)).to.be.equal(data.z3);",
            "err": {},
            "isRoot": false,
            "uuid": "63393917-3519-435a-adb3-06ffb2098dde",
            "parentUUID": "46f46c80-20a3-4391-899e-d215c45519c5",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "减法函数的测试",
        "suites": [],
        "tests": [
          {
            "title": "x4 减 y4 应该等于 z4",
            "fullTitle": "减法函数的测试 x4 减 y4 应该等于 z4",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Caculator.substract(data.x4, data.y4)).to.be.equal(data.z4);",
            "err": {},
            "isRoot": false,
            "uuid": "49b934a3-d00c-4658-9a17-66f6143c8f51",
            "parentUUID": "c300329c-7b59-496a-a26d-130260c279e8",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\Caculator.test.js",
        "uuid": "c300329c-7b59-496a-a26d-130260c279e8",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "e:\\Progaram File\\Microsoft VS Code\\test\\Project\\Demo\\Caculator.test.js",
        "passes": [
          {
            "title": "x4 减 y4 应该等于 z4",
            "fullTitle": "减法函数的测试 x4 减 y4 应该等于 z4",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Caculator.substract(data.x4, data.y4)).to.be.equal(data.z4);",
            "err": {},
            "isRoot": false,
            "uuid": "49b934a3-d00c-4658-9a17-66f6143c8f51",
            "parentUUID": "c300329c-7b59-496a-a26d-130260c279e8",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "减法函数的测试",
        "suites": [],
        "tests": [
          {
            "title": "x5 减 y5 不应该等于 z5",
            "fullTitle": "减法函数的测试 x5 减 y5 不应该等于 z5",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Caculator.substract(data.x5, data.y5)).not.to.be.equal(data.z5);",
            "err": {},
            "isRoot": false,
            "uuid": "8945162b-6c6f-4918-b3e7-adfc4f9d022a",
            "parentUUID": "dab6c49d-c58b-4228-a6a8-ed7ba2505c9e",
            "isHook": false,
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\Caculator.test.js",
        "uuid": "dab6c49d-c58b-4228-a6a8-ed7ba2505c9e",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "e:\\Progaram File\\Microsoft VS Code\\test\\Project\\Demo\\Caculator.test.js",
        "passes": [
          {
            "title": "x5 减 y5 不应该等于 z5",
            "fullTitle": "减法函数的测试 x5 减 y5 不应该等于 z5",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(Caculator.substract(data.x5, data.y5)).not.to.be.equal(data.z5);",
            "err": {},
            "isRoot": false,
            "uuid": "8945162b-6c6f-4918-b3e7-adfc4f9d022a",
            "parentUUID": "dab6c49d-c58b-4228-a6a8-ed7ba2505c9e",
            "isHook": false,
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "938ae867-776f-4d1a-9560-c933bc70ec26",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "x1 加 y2 应该等于 r1",
      "fullTitle": "加法函数的测试 x1 加 y2 应该等于 r1",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(add(x1, y1)).to.be.equal(r1);",
      "err": {},
      "isRoot": false,
      "uuid": "6caa3e74-4f50-4405-a653-3c3f180ada10",
      "parentUUID": "ff743054-3e1d-4b78-a7f7-a4a5d83306a1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "x2 加 y2 应该等于 r2",
      "fullTitle": "加法函数的测试 x2 加 y2 应该等于 r2",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(add(x2, y2)).to.be.equal(r2);",
      "err": {},
      "isRoot": false,
      "uuid": "bdd95caa-980e-4b90-9c6c-9790bc74a05d",
      "parentUUID": "ff743054-3e1d-4b78-a7f7-a4a5d83306a1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "x3 加 y3 不等于 wrong3",
      "fullTitle": "加法函数的测试 x3 加 y3 不等于 wrong3",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(add(x3, y3)).to.be.not.equal(wrong3);",
      "err": {},
      "isRoot": false,
      "uuid": "6c1fc1aa-d5a0-4f4e-9447-9e331eb36fd5",
      "parentUUID": "ff743054-3e1d-4b78-a7f7-a4a5d83306a1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "删除指定的record并验证返回值",
      "fullTitle": "/k/v1/records.json DELETE测试 删除指定的record并验证返回值",
      "timedOut": true,
      "duration": 2020,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "api.delete('')\n  .set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n  .send({\n    \"app\": 1,\n    \"ids\": [13,14]\n  })\n\n  .expect(200)\n  .end(function(err, res){\n  if (err) return done(err);\n  done();\n\n  })",
      "err": {
        "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.",
        "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
      },
      "isRoot": false,
      "uuid": "e6dc48f7-dac2-4cf8-b350-b2a94794d32f",
      "parentUUID": "384c2786-c5c2-43f9-8890-887cbf5b559e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a 200 response",
      "fullTitle": "Record should return a 200 response",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "speed": "fast",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "api.get('?app=1&id=1')\n  .set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n  .expect(200, done) //返回值response为200\ndone();",
      "err": {
        "message": "Error: done() called multiple times",
        "estack": "Error: done() called multiple times\n    at Suite.<anonymous> (API.get.test.js:7:3)\n    at Object.<anonymous> (API.get.test.js:4:1)\n    at require (internal/module.js:20:19)\n    at Array.forEach (native)\n    at run (bootstrap_node.js:389:7)\n    at startup (bootstrap_node.js:149:9)\n    at bootstrap_node.js:504:3"
      },
      "isRoot": false,
      "uuid": "2c0ad0cb-8693-4f1d-a7c6-71ac79e18812",
      "parentUUID": "463efed0-465d-4e50-8101-51b716f859a9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a 200 response",
      "fullTitle": "Record should return a 200 response",
      "timedOut": true,
      "duration": 2018,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "api.get('?app=1&id=1')\n.set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n.expect(200) //返回值response为200\n.end(function(err, res){\nif (err) return done(err);\n  expect(res.body.record).to.have.property('天気')   //断言结果有 '天气' 字段\n  expect(res.body.record.天気.value).to.be.equal('晴れ'); //断言结果 '天气' 字段的值为 '晴れ'\n  expect(res.body.record).to.have.property('レコード番号')\n  expect(res.body.record.レコード番号.value).to.be.equal('1');\n  expect(res.body.record).to.have.property('作成者')\n  expect(res.body.record.作成者.value.code).to.be.equal('cybozu');\n\n\ndone(); //告诉mocha结束测试\n  })",
      "err": {
        "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.",
        "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
      },
      "isRoot": false,
      "uuid": "9441aefc-95f1-4d53-b30f-1a69f6747da8",
      "parentUUID": "de4832de-6aea-46b3-9481-515031676c0b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a 200 response",
      "fullTitle": "Record should return a 200 response",
      "timedOut": false,
      "duration": 772,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "api.post('')\n.set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n.set('Content-Type', 'application/json')\n.send({\n\"app\":1,\n\"record\": {\n  \"売上\": {\"value\": \"123456\"},\n   \"天気\":{\"value\":\"雨\"},\n   \"引継ぎ事項\":{\"value\":\"AAA\"}\n  }}\n)\n.expect(200)\n.end(function(err, res){\nif (err) return done(err);\ndone();\n\n})",
      "err": {
        "message": "AssertionError: expected '雨' to equal '晴れ'",
        "estack": "AssertionError: expected '雨' to equal '晴れ'\n    at Test.<anonymous> (API.get.value.test.js:14:44)\n    at Test.assert (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:179:6)\n    at assert (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:131:12)\n    at e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:128:5\n    at Test.Request.callback (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\index.js:668:14)\n    at e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\index.js:883:18\n    at Stream.<anonymous> (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\parsers\\json.js:16:7)\n    at Unzip.<anonymous> (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\unzip.js:53:12)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)",
        "diff": "- 雨\n+ 晴れ\n"
      },
      "isRoot": false,
      "uuid": "6ae3ae4d-da40-4de5-97ea-5e6a29aeb1c6",
      "parentUUID": "df9d10be-f2dd-421a-9421-e55d4c12447e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "x1 加 y1 应该等于 z1",
      "fullTitle": "加法函数的测试 x1 加 y1 应该等于 z1",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Caculator.add(data.x1, data.y1)).to.be.equal(data.z1);",
      "err": {},
      "isRoot": false,
      "uuid": "d9cd4404-1f8c-4ace-9fee-54e2c0ad6948",
      "parentUUID": "449540ed-f342-4721-8dff-3f2fadb44dea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "x2 乘 y2 应该等于 z2",
      "fullTitle": "乘法函数的测试 x2 乘 y2 应该等于 z2",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Caculator.multiply(data.x2, data.y2)).to.be.equal(data.z2);",
      "err": {},
      "isRoot": false,
      "uuid": "3b16bf1a-005d-4bec-a349-cb3eced8f3d0",
      "parentUUID": "cfcdaa62-4223-4ac9-adfa-2035fc2e0a0d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "x3 除 y3 应该等于 z3",
      "fullTitle": "除法函数的测试 x3 除 y3 应该等于 z3",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Caculator.divide(data.x3, data.y3)).to.be.equal(data.z3);",
      "err": {},
      "isRoot": false,
      "uuid": "63393917-3519-435a-adb3-06ffb2098dde",
      "parentUUID": "46f46c80-20a3-4391-899e-d215c45519c5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "x4 减 y4 应该等于 z4",
      "fullTitle": "减法函数的测试 x4 减 y4 应该等于 z4",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Caculator.substract(data.x4, data.y4)).to.be.equal(data.z4);",
      "err": {},
      "isRoot": false,
      "uuid": "49b934a3-d00c-4658-9a17-66f6143c8f51",
      "parentUUID": "c300329c-7b59-496a-a26d-130260c279e8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "x5 减 y5 不应该等于 z5",
      "fullTitle": "减法函数的测试 x5 减 y5 不应该等于 z5",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Caculator.substract(data.x5, data.y5)).not.to.be.equal(data.z5);",
      "err": {},
      "isRoot": false,
      "uuid": "8945162b-6c6f-4918-b3e7-adfc4f9d022a",
      "parentUUID": "dab6c49d-c58b-4228-a6a8-ed7ba2505c9e",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "x1 加 y2 应该等于 r1",
      "fullTitle": "加法函数的测试 x1 加 y2 应该等于 r1",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(add(x1, y1)).to.be.equal(r1);",
      "err": {},
      "isRoot": false,
      "uuid": "6caa3e74-4f50-4405-a653-3c3f180ada10",
      "parentUUID": "ff743054-3e1d-4b78-a7f7-a4a5d83306a1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "x2 加 y2 应该等于 r2",
      "fullTitle": "加法函数的测试 x2 加 y2 应该等于 r2",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(add(x2, y2)).to.be.equal(r2);",
      "err": {},
      "isRoot": false,
      "uuid": "bdd95caa-980e-4b90-9c6c-9790bc74a05d",
      "parentUUID": "ff743054-3e1d-4b78-a7f7-a4a5d83306a1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "x3 加 y3 不等于 wrong3",
      "fullTitle": "加法函数的测试 x3 加 y3 不等于 wrong3",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(add(x3, y3)).to.be.not.equal(wrong3);",
      "err": {},
      "isRoot": false,
      "uuid": "6c1fc1aa-d5a0-4f4e-9447-9e331eb36fd5",
      "parentUUID": "ff743054-3e1d-4b78-a7f7-a4a5d83306a1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a 200 response",
      "fullTitle": "Record should return a 200 response",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "speed": "fast",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "api.get('?app=1&id=1')\n  .set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n  .expect(200, done) //返回值response为200\ndone();",
      "err": {
        "message": "Error: done() called multiple times",
        "estack": "Error: done() called multiple times\n    at Suite.<anonymous> (API.get.test.js:7:3)\n    at Object.<anonymous> (API.get.test.js:4:1)\n    at require (internal/module.js:20:19)\n    at Array.forEach (native)\n    at run (bootstrap_node.js:389:7)\n    at startup (bootstrap_node.js:149:9)\n    at bootstrap_node.js:504:3"
      },
      "isRoot": false,
      "uuid": "2c0ad0cb-8693-4f1d-a7c6-71ac79e18812",
      "parentUUID": "463efed0-465d-4e50-8101-51b716f859a9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "x1 加 y1 应该等于 z1",
      "fullTitle": "加法函数的测试 x1 加 y1 应该等于 z1",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Caculator.add(data.x1, data.y1)).to.be.equal(data.z1);",
      "err": {},
      "isRoot": false,
      "uuid": "d9cd4404-1f8c-4ace-9fee-54e2c0ad6948",
      "parentUUID": "449540ed-f342-4721-8dff-3f2fadb44dea",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "x2 乘 y2 应该等于 z2",
      "fullTitle": "乘法函数的测试 x2 乘 y2 应该等于 z2",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Caculator.multiply(data.x2, data.y2)).to.be.equal(data.z2);",
      "err": {},
      "isRoot": false,
      "uuid": "3b16bf1a-005d-4bec-a349-cb3eced8f3d0",
      "parentUUID": "cfcdaa62-4223-4ac9-adfa-2035fc2e0a0d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "x3 除 y3 应该等于 z3",
      "fullTitle": "除法函数的测试 x3 除 y3 应该等于 z3",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Caculator.divide(data.x3, data.y3)).to.be.equal(data.z3);",
      "err": {},
      "isRoot": false,
      "uuid": "63393917-3519-435a-adb3-06ffb2098dde",
      "parentUUID": "46f46c80-20a3-4391-899e-d215c45519c5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "x4 减 y4 应该等于 z4",
      "fullTitle": "减法函数的测试 x4 减 y4 应该等于 z4",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Caculator.substract(data.x4, data.y4)).to.be.equal(data.z4);",
      "err": {},
      "isRoot": false,
      "uuid": "49b934a3-d00c-4658-9a17-66f6143c8f51",
      "parentUUID": "c300329c-7b59-496a-a26d-130260c279e8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "x5 减 y5 不应该等于 z5",
      "fullTitle": "减法函数的测试 x5 减 y5 不应该等于 z5",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(Caculator.substract(data.x5, data.y5)).not.to.be.equal(data.z5);",
      "err": {},
      "isRoot": false,
      "uuid": "8945162b-6c6f-4918-b3e7-adfc4f9d022a",
      "parentUUID": "dab6c49d-c58b-4228-a6a8-ed7ba2505c9e",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "删除指定的record并验证返回值",
      "fullTitle": "/k/v1/records.json DELETE测试 删除指定的record并验证返回值",
      "timedOut": true,
      "duration": 2020,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "api.delete('')\n  .set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n  .send({\n    \"app\": 1,\n    \"ids\": [13,14]\n  })\n\n  .expect(200)\n  .end(function(err, res){\n  if (err) return done(err);\n  done();\n\n  })",
      "err": {
        "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.",
        "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
      },
      "isRoot": false,
      "uuid": "e6dc48f7-dac2-4cf8-b350-b2a94794d32f",
      "parentUUID": "384c2786-c5c2-43f9-8890-887cbf5b559e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a 200 response",
      "fullTitle": "Record should return a 200 response",
      "timedOut": true,
      "duration": 2018,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "api.get('?app=1&id=1')\n.set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n.expect(200) //返回值response为200\n.end(function(err, res){\nif (err) return done(err);\n  expect(res.body.record).to.have.property('天気')   //断言结果有 '天气' 字段\n  expect(res.body.record.天気.value).to.be.equal('晴れ'); //断言结果 '天气' 字段的值为 '晴れ'\n  expect(res.body.record).to.have.property('レコード番号')\n  expect(res.body.record.レコード番号.value).to.be.equal('1');\n  expect(res.body.record).to.have.property('作成者')\n  expect(res.body.record.作成者.value.code).to.be.equal('cybozu');\n\n\ndone(); //告诉mocha结束测试\n  })",
      "err": {
        "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.",
        "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
      },
      "isRoot": false,
      "uuid": "9441aefc-95f1-4d53-b30f-1a69f6747da8",
      "parentUUID": "de4832de-6aea-46b3-9481-515031676c0b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a 200 response",
      "fullTitle": "Record should return a 200 response",
      "timedOut": false,
      "duration": 772,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "api.post('')\n.set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n.set('Content-Type', 'application/json')\n.send({\n\"app\":1,\n\"record\": {\n  \"売上\": {\"value\": \"123456\"},\n   \"天気\":{\"value\":\"雨\"},\n   \"引継ぎ事項\":{\"value\":\"AAA\"}\n  }}\n)\n.expect(200)\n.end(function(err, res){\nif (err) return done(err);\ndone();\n\n})",
      "err": {
        "message": "AssertionError: expected '雨' to equal '晴れ'",
        "estack": "AssertionError: expected '雨' to equal '晴れ'\n    at Test.<anonymous> (API.get.value.test.js:14:44)\n    at Test.assert (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:179:6)\n    at assert (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:131:12)\n    at e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:128:5\n    at Test.Request.callback (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\index.js:668:14)\n    at e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\index.js:883:18\n    at Stream.<anonymous> (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\parsers\\json.js:16:7)\n    at Unzip.<anonymous> (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\unzip.js:53:12)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)",
        "diff": "- 雨\n+ 晴れ\n"
      },
      "isRoot": false,
      "uuid": "6ae3ae4d-da40-4de5-97ea-5e6a29aeb1c6",
      "parentUUID": "df9d10be-f2dd-421a-9421-e55d4c12447e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return a 200 response",
      "fullTitle": "Record should return a 200 response",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "speed": "fast",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "api.get('?app=1&id=1')\n  .set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n  .expect(200, done) //返回值response为200\ndone();",
      "err": {
        "message": "Error: done() called multiple times",
        "estack": "Error: done() called multiple times\n    at Suite.<anonymous> (API.get.test.js:7:3)\n    at Object.<anonymous> (API.get.test.js:4:1)\n    at require (internal/module.js:20:19)\n    at Array.forEach (native)\n    at run (bootstrap_node.js:389:7)\n    at startup (bootstrap_node.js:149:9)\n    at bootstrap_node.js:504:3"
      },
      "isRoot": false,
      "uuid": "2c0ad0cb-8693-4f1d-a7c6-71ac79e18812",
      "parentUUID": "463efed0-465d-4e50-8101-51b716f859a9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "\"before all\" hook",
      "fullTitle": "Record \"before all\" hook",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "api.post('')\n  .set('X-Cybozu-Authorization', 'Y3lib3p1OmN5Ym96dQ==')\n  .set('Content-Type', 'application/json')\n  .send({\n    \"app\": 1,\n    \"record\": {\n      \"売上\": { \"value\": \"123456\" },\n      \"天気\": { \"value\": \"雨\" },\n      \"引継ぎ事項\": { \"value\": \"AAA\" }\n    }\n  })\n  .expect(200) \n  .end(function (err, res) {\n    if (err) return done(err);\n    location = res.body.id;\n    done();\n  })",
      "err": {
        "message": "TypeError: Cannot set property 'state' of undefined",
        "estack": "TypeError: Cannot set property 'state' of undefined\n    at Test.<anonymous> (API.post.test.js:25:3)\n    at Test.assert (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:179:6)\n    at assert (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:131:12)\n    at e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\supertest\\lib\\test.js:128:5\n    at Test.Request.callback (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\index.js:668:14)\n    at e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\index.js:883:18\n    at Stream.<anonymous> (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\parsers\\json.js:16:7)\n    at Unzip.<anonymous> (e:\\Progaram File\\Microsoft VS Code\\test\\node_modules\\superagent\\lib\\node\\unzip.js:53:12)\n    at endReadableNT (_stream_readable.js:974:12)\n    at _combinedTickCallback (internal/process/next_tick.js:80:11)\n    at process._tickCallback (internal/process/next_tick.js:104:9)"
      },
      "isRoot": false,
      "uuid": "f1d91f8f-8c23-430d-8cd2-2137b71fc9f7",
      "parentUUID": "738f996d-880b-4fb1-93f5-079221d3f620",
      "isHook": true,
      "skipped": false
    }
  ],
  "copyrightYear": 2017
}